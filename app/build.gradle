apply plugin: 'com.android.application'

android {
    useLibrary 'org.apache.http.legacy'//API 23 弃用 HttpClient替换方案
    compileSdkVersion 29//用哪个 Android SDK 版本编译你的应用

    defaultConfig {
        applicationId "com.thinkernote.ThinkerNote"
        minSdkVersion 23//8-12 异步还能用，13+异步升级不能用 12
        targetSdkVersion 28//说明：28+需要大改代码，一些类不支持了/sjy-2019-04-23
        versionCode 54
        versionName "5.8.3"

        // 语音转文字没有对应的64位so包，所以只能使用32位的，配置如下：
        ndk {
            abiFilters "armeabi"
//                    ，"arm64-v8a","armeabi-v7a","x86","x86_64"//最好不要加，会导致app包变大
        }
    }

    signingConfigs {
        config {
            keyAlias 'will'
            keyPassword 'thinkernote'
            storeFile file('../app/src/main/assets/ThinkerNote2_key0817')
            storePassword 'thinkernote'
        }
    }

    buildTypes {
        release {
            // TODO 混淆,不可用，运行崩溃
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
//            shrinkResources true
            // 前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }

//        release {
//            // 混淆
//            minifyEnabled true
//            // 前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
//            signingConfig signingConfigs.config
//        }
        debug {
            // 混淆
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
//            shrinkResources true
            // 前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    //so库在libs下的配置
    sourceSets {
        main {
            jniLibs.srcDirs 'libs'//app/libs下
            jni.srcDirs = []
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    buildToolsVersion = '28.0.3'
}

dependencies {

    //系统包依赖
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
//替换 com.android.support:appcompat-v7:28.0.2
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//替换 com.android.support:support-v4:28.0.2


    //libs包依赖
    implementation files('libs/alipaySdk-20180601.jar')
    //TODO 后期删除
    implementation files('libs/android-async-http-1.4.4.jar')
    implementation files('libs/android_api.jar')

    //旧版百度定位

    //    implementation files('libs/baidu_locSDK_2.3.jar')

    //新版百度定位 2018-0712 sjy
    implementation files('libs/BaiduLBS_Android.jar')
    implementation files('libs/httpmime-4.1.jar')
    //讯飞离线语音转文字
    implementation files('libs/Msc.jar')
    implementation files('libs/mta-sdk-1.6.2.jar')
    implementation files('libs/open_sdk.jar')
    implementation files('libs/pinyin4j-2.5.0.jar')
    implementation files('libs/weibo_sdk.jar')
    implementation files('libs/commons-lang3-3.1.jar')
    //讯飞语音合成
    implementation files('libs/Sunflower.jar')
    //01 说明：微信功能jar，和02相同
    implementation files('libs/libammsdk.jar')

    //02 说明：微信功能依赖，和01相同（但是maven库不可用了 sjy  0623）

    //    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'

    //

    //    implementation 'jp.wasabeef:richeditor-android:1.2.2'


    //---------------------------------使用最新网络框架--开始----------------------------------------

    //=============okhttp3相关==============
    //    //okhttp3: 网络请求log 拦截器
    implementation 'com.squareup.okhttp3:logging-interceptor:4.0.1'
    //=============retrofit相关：说明：retrofit2之后，自动绑定了okhttp3和okio，所以不需要再添加==============
    implementation('com.squareup.retrofit2:retrofit:2.6.0') {
        //retrofit2内绑定的依赖
        exclude module: 'com.squareup.okhttp3:okhttp:4.0.1'
        exclude module: 'com.squareup.okio:okio:2.2.2'
    }
    //RxJava2 请求结果适配器
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.6.0'
    //RxJava2 请求结果gson格式转换
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    //=============rxjava相关==============
    implementation "io.reactivex.rxjava2:rxjava:2.2.10"
    implementation 'io.reactivex:rxandroid:1.2.1'


    //-------------------------leakcanary内存泄漏检测 打包时注意清除--------------------------------

    //    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'

    //    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'

    //    // Optional, if you use support library fragments:

    //    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'


}

